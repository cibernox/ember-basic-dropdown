{"version":3,"file":"basic-dropdown-trigger.js","sources":["../../src/components/basic-dropdown-trigger.gts"],"sourcesContent":["import Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { element } from 'ember-element-helper';\nimport { or } from 'ember-truth-helpers';\nimport { concat } from '@ember/helper';\nimport basicDropdownTriggerModifier from '../modifiers/basic-dropdown-trigger.ts';\nimport { on } from '@ember/modifier';\nimport { fn } from '@ember/helper';\nimport type { Dropdown } from './basic-dropdown';\nimport type { HorizontalPosition, VerticalPosition } from '../types.ts';\n\nexport interface BasicDropdownTriggerSignature {\n  Element: HTMLElement;\n  Args: {\n    dropdown?: Dropdown;\n    eventType?: 'click' | 'mousedown';\n    stopPropagation?: boolean;\n    vPosition?: VerticalPosition | null;\n    hPosition?: HorizontalPosition | null;\n    defaultClass?: string;\n    renderInPlace?: boolean;\n    htmlTag?: keyof HTMLElementTagNameMap;\n    onBlur?: (dropdown?: Dropdown, event?: FocusEvent) => void;\n    onClick?: (dropdown?: Dropdown, event?: MouseEvent) => void;\n    onFocus?: (dropdown?: Dropdown, event?: FocusEvent) => void;\n    onFocusIn?: (dropdown?: Dropdown, event?: FocusEvent) => void;\n    onFocusOut?: (dropdown?: Dropdown, event?: FocusEvent) => void;\n    onKeyDown?: (dropdown?: Dropdown, event?: KeyboardEvent) => void;\n    onMouseDown?: (dropdown?: Dropdown, event?: MouseEvent) => void;\n    onMouseEnter?: (dropdown?: Dropdown, event?: MouseEvent) => void;\n    onMouseLeave?: (dropdown?: Dropdown, event?: MouseEvent) => void;\n    onTouchEnd?: (dropdown?: Dropdown, event?: TouchEvent) => void;\n  };\n  Blocks: {\n    default: [];\n  };\n}\n\nexport default class BasicDropdownTrigger extends Component<BasicDropdownTriggerSignature> {\n  // Actions\n  /**\n   * Allows similar behavior to `ember-composable-helpers`' `optional` helper.\n   * Avoids adding extra dependencies.\n   * Can be removed when the template `V1` compatibility event handlers are removed.\n   *\n   * @see https://github.com/cibernox/ember-basic-dropdown/issues/498\n   * @memberof BasicDropdownContent\n   */\n  noop(): void {}\n\n  @action\n  disableDocumentTextSelect(disable: boolean) {\n    if (disable) {\n      document.body.classList.add('ember-basic-dropdown-text-select-disabled');\n    } else {\n      document.body.classList.remove(\n        'ember-basic-dropdown-text-select-disabled',\n      );\n    }\n  }\n\n  <template>\n    {{#if @dropdown}}\n      {{#let (element (or @htmlTag \"div\")) as |OptionalTag|}}\n        {{! template-lint-disable no-pointer-down-event-binding }}\n        <OptionalTag\n          class=\"ember-basic-dropdown-trigger\n            {{if @renderInPlace ' ember-basic-dropdown-trigger--in-place'}}\n            {{if\n              @hPosition\n              (concat ' ember-basic-dropdown-trigger--' @hPosition)\n            }}\n            {{if\n              @vPosition\n              (concat ' ember-basic-dropdown-trigger--' @vPosition)\n            }}\n            {{@defaultClass}}\"\n          {{basicDropdownTriggerModifier\n            dropdown=@dropdown\n            eventType=@eventType\n            stopPropagation=@stopPropagation\n          }}\n          tabindex={{unless @dropdown.disabled \"0\"}}\n          ...attributes\n          {{on \"mousedown\" (fn this.disableDocumentTextSelect true)}}\n          {{on \"mouseup\" (fn this.disableDocumentTextSelect false)}}\n          {{! V1 compatibility - See #498 }}\n          {{on \"keydown\" (fn (or @onKeyDown this.noop) @dropdown)}}\n          {{on \"mousedown\" (fn (or @onMouseDown this.noop) @dropdown)}}\n          {{on \"touchend\" (fn (or @onTouchEnd this.noop) @dropdown)}}\n          {{on \"click\" (fn (or @onClick this.noop) @dropdown)}}\n          {{on \"mouseenter\" (fn (or @onMouseEnter this.noop) @dropdown)}}\n          {{on \"mouseleave\" (fn (or @onMouseLeave this.noop) @dropdown)}}\n          {{on \"focus\" (fn (or @onFocus this.noop) @dropdown)}}\n          {{on \"blur\" (fn (or @onBlur this.noop) @dropdown)}}\n          {{on \"focusin\" (fn (or @onFocusIn this.noop) @dropdown)}}\n          {{on \"focusout\" (fn (or @onFocusOut this.noop) @dropdown)}}\n        >\n          {{yield}}\n        </OptionalTag>\n      {{/let}}\n    {{/if}}\n  </template>\n}\n"],"names":["BasicDropdownTrigger","Component","noop","disableDocumentTextSelect","disable","document","body","classList","add","remove","n","prototype","action","setComponentTemplate","precompileTemplate","strictMode","scope","element","or","concat","basicDropdownTriggerModifier","on","fn"],"mappings":";;;;;;;;;;;AAsCe,MAAMA,6BAA6BC,SAAA,CAAU;AAC1D;AACA;;;;;;;;EAQAC,IAAAA,GAAa,CAAC;EAGdC,yBAAAA,CAA0BC,OAAgB,EAAE;AAC1C,IAAA,IAAIA,OAAA,EAAS;MACXC,QAAA,CAASC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,2CAAA,CAAA;AAC9B,IAAA,CAAA,MAAO;MACLH,QAAA,CAASC,IAAI,CAACC,SAAS,CAACE,MAAM,CAC5B,2CAAA,CAAA;AAEJ,IAAA;AACF,EAAA;AAAA,EAAA;IAAAC,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,2BAAA,EAAA,CATCC,MAAA,CAAA,CAAA;AAAA;AAWD,EAAA;IAAAC,oBAAA,CAAAC,kBAAA,CAAA,++CAAA,EAyCA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;QAAAC,OAAA;QAAAC,EAAA;QAAAC,MAAA;sCAAAC,uBAAA;QAAAC,EAAA;AAAAC,QAAAA;AAAA,OAAA;KAAU,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}