<h1 class="doc-page-title">Installation</h1>

<p>
  Ember-basic-dropdown is distributed as an
  <a href="https://www.ember-cli.com/">Ember CLI</a>
  addon. To install it, run the following command in your ember project
  directory
</p>

<div class="highlight">
  <pre><code class="language-text" data-lang="text">$ ember install
      ember-basic-dropdown</code></pre>
</div>

<p>
  When installing this through
  <code>ember install</code>
  the addon will add the necessary snippet above automatically in your app.
</p>

<h3>Manual installation</h3>

<p>
  After the installation you need to add the following lines somewhere in your
  templates where you want to render the dropdown content into e.g. your
  <code>application.hbs</code>. In this component will be rendered the dropdown
  content.
</p>

<CodeBlock @language="hbs" @code="<BasicDropdownWormhole />" />

<p>
  If you use vanilla CSS, you need to add the following line into
  <code>app.js</code>
  or in any route/controller/component
  <code>.js/.ts</code>
  file:
</p>

<CodeBlock @language="js" @code="import 'ember-basic-dropdown/styles';" />

<p>
  Instead of adding the styling in an
  <code>.js</code>
  file and depending from your build config you can also add the css in any
  template/component css file by using following line
</p>

{{! template-lint-disable no-potential-path-strings }}
<CodeBlock
  @language="css"
  @code="@import 'ember-basic-dropdown/vendor/ember-basic-dropdown.css';"
/>

<p>
  However, if you are using SASS or LESS you need to add an import statement to
  your styles.
</p>

{{#let (get-code-snippet "installation-1.scss") as |snippet|}}
  <CodeBlock @language="scss" @code={{snippet.source}} />
{{/let}}

<p>
  If you are using LESS there is also necessary to register the
  <code>paths</code>
  in
  <code>lessOptions</code>
</p>

{{#let (get-code-snippet "installation-2.js") as |snippet|}}
  <CodeBlock @language="js" @code={{snippet.source}} />
{{/let}}

<p>
  The styles of the addon are
  <strong>very minimal</strong>
  and deal mostly with positioning. You can tweak a couple things but we'll get
  to that later.
</p>

<p>
  Now let's learn the API of the component.
</p>

<div class="doc-page-nav">
  <LinkTo @route="public-pages.docs.index" class="doc-page-nav-link-prev">&lt;
    Overview</LinkTo>
  <LinkTo
    @route="public-pages.docs.how-to-use-it"
    class="doc-page-nav-link-next"
  >How to use it &gt;</LinkTo>
</div>